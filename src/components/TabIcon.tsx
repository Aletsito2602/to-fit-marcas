import React from 'react';
import { View, StyleSheet } from 'react-native';
import Svg, { Path, Mask } from 'react-native-svg';
import { Ionicons } from '@expo/vector-icons';

interface TabIconProps {
  name: 'home' | 'orders' | 'camera' | 'products' | 'metrics';
  focused: boolean;
  size?: number;
}

const TabIcon: React.FC<TabIconProps> = ({ name, focused, size = 24 }) => {
  const color = focused ? '#FFFFFF' : 'rgba(157, 157, 157, 1)';

  const renderIcon = () => {
    switch (name) {
      case 'home':
        return (
          <Svg width={size} height={size} viewBox="0 0 20 20" fill="none">
            <Mask id="path-1-inside-1_3346_24465" fill="white">
              <Path d="M13.3332 20.0001V11.5788C13.3332 11.2996 13.2161 11.0319 13.0077 10.8344C12.7994 10.637 12.5167 10.5261 12.2221 10.5261H7.77761C7.48293 10.5261 7.20031 10.637 6.99194 10.8344C6.78357 11.0319 6.6665 11.2996 6.6665 11.5788V20.0001"/>
            </Mask>
            <Path 
              d="M12.3332 20.0001C12.3332 20.5524 12.7809 21.0001 13.3332 21.0001C13.8855 21.0001 14.3332 20.5524 14.3332 20.0001H12.3332ZM5.6665 20.0001C5.6665 20.5524 6.11422 21.0001 6.6665 21.0001C7.21879 21.0001 7.6665 20.5524 7.6665 20.0001H5.6665ZM14.3332 20.0001V11.5788H12.3332V20.0001H14.3332ZM14.3332 11.5788C14.3332 11.0164 14.0969 10.4888 13.6955 10.1085L12.32 11.5604C12.328 11.568 12.3312 11.5739 12.3323 11.5765C12.3334 11.5791 12.3332 11.5796 12.3332 11.5788H14.3332ZM13.6955 10.1085C13.2959 9.72997 12.765 9.52612 12.2221 9.52612V11.5261C12.2684 11.5261 12.3028 11.5441 12.32 11.5604L13.6955 10.1085ZM12.2221 9.52612H7.77761V11.5261H12.2221V9.52612ZM7.77761 9.52612C7.23463 9.52612 6.70373 9.72997 6.30419 10.1085L7.6797 11.5604C7.6969 11.5441 7.73123 11.5261 7.77761 11.5261V9.52612ZM6.30419 10.1085C5.90281 10.4888 5.6665 11.0164 5.6665 11.5788H7.6665C7.6665 11.5796 7.66624 11.5791 7.66734 11.5765C7.66847 11.5739 7.67168 11.568 7.6797 11.5604L6.30419 10.1085ZM5.6665 11.5788V20.0001H7.6665V11.5788H5.6665Z" 
              fill={color} 
              mask="url(#path-1-inside-1_3346_24465)"
            />
            <Path 
              d="M10 0.5C10.4129 0.5 10.8093 0.637857 11.1191 0.884766V0.885742L18.8975 7.2002L18.8994 7.20215C19.0901 7.35485 19.2418 7.54378 19.3447 7.75391C19.4476 7.96392 19.5001 8.19171 19.5 8.4209V17.8945C19.5 18.3113 19.3251 18.7171 19.0049 19.0205C18.6837 19.3246 18.2425 19.5 17.7773 19.5H2.22266C1.75755 19.5 1.31626 19.3246 0.995117 19.0205C0.674872 18.7171 0.5 18.3113 0.5 17.8945V8.4209C0.499942 8.19171 0.552414 7.96392 0.655273 7.75391C0.75819 7.54379 0.909872 7.35485 1.10059 7.20215L1.10254 7.2002L8.87988 0.884766C9.18983 0.637559 9.58685 0.5 10 0.5Z" 
              stroke={color} 
              strokeLinecap="round" 
              strokeLinejoin="round"
            />
          </Svg>
        );

      case 'orders':
        return (
          <Svg width={size} height={Math.round(size * 0.73)} viewBox="0 0 22 16" fill="none">
            <Path 
              d="M11.75 1V3M11.75 13V15M11.75 7V9M0.75 5C1.54565 5 2.30871 5.31607 2.87132 5.87868C3.43393 6.44129 3.75 7.20435 3.75 8C3.75 8.79565 3.43393 9.55871 2.87132 10.1213C2.30871 10.6839 1.54565 11 0.75 11V13C0.75 13.5304 0.960714 14.0391 1.33579 14.4142C1.71086 14.7893 2.21957 15 2.75 15H18.75C19.2804 15 19.7891 14.7893 20.1642 14.4142C20.5393 14.0391 20.75 13.5304 20.75 13V11C19.9544 11 19.1913 10.6839 18.6287 10.1213C18.0661 9.55871 17.75 8.79565 17.75 8C17.75 7.20435 18.0661 6.44129 18.6287 5.87868C19.1913 5.31607 19.9544 5 20.75 5V3C20.75 2.46957 20.5393 1.96086 20.1642 1.58579C19.7891 1.21071 19.2804 1 18.75 1H2.75C2.21957 1 1.71086 1.21071 1.33579 1.58579C0.960714 1.96086 0.75 2.46957 0.75 3V5Z" 
              stroke={color} 
              strokeLinecap="round" 
              strokeLinejoin="round"
            />
          </Svg>
        );

      case 'products':
        return (
          <Svg width={size} height={Math.round(size * 0.96)} viewBox="0 0 25 24" fill="none">
            <Path 
              d="M3.25 6L6.25 2H18.25L21.25 6M3.25 6V20C3.25 20.5304 3.46071 21.0391 3.83579 21.4142C4.21086 21.7893 4.71957 22 5.25 22H19.25C19.7804 22 20.2891 21.7893 20.6642 21.4142C21.0393 21.0391 21.25 20.5304 21.25 20V6M3.25 6H21.25" 
              stroke={color} 
              strokeLinecap="round" 
              strokeLinejoin="round"
            />
            <Path 
              d="M16.25 10C16.25 11.0609 15.8286 12.0783 15.0784 12.8284C14.3283 13.5786 13.3109 14 12.25 14C11.1891 14 10.1717 13.5786 9.42157 12.8284C8.67143 12.0783 8.25 11.0609 8.25 10" 
              stroke={color} 
              strokeLinecap="round" 
              strokeLinejoin="round"
            />
          </Svg>
        );

      case 'metrics':
        return (
          <Svg width={size} height={size} viewBox="0 0 24 24" fill="none">
            <Path d="M12 16V21M16 14V21M20 10V21M22 3L13.354 11.646C13.3076 11.6926 13.2524 11.7295 13.1916 11.7547C13.1309 11.7799 13.0658 11.7929 13 11.7929C12.9342 11.7929 12.8691 11.7799 12.8084 11.7547C12.7476 11.7295 12.6924 11.6926 12.646 11.646L9.354 8.354C9.26024 8.26026 9.13308 8.20761 9.0005 8.20761C8.86792 8.20761 8.74076 8.26026 8.647 8.354L2 15M4 18V21M8 14V21" stroke={color} strokeLinecap="round" strokeLinejoin="round"/>
          </Svg>
        );

      case 'camera':
        return (
          <Ionicons 
            name="camera-outline" 
            size={size} 
            color={color} 
          />
        );

      default:
        return null;
    }
  };

  return (
    <View style={styles.container}>
      {renderIcon()}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center',
  },
});

export default TabIcon;